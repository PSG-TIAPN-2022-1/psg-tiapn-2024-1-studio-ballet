// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace APIJessicaOliveira2.Models;

public partial class STUDIO_JESSICA_OLIVEIRA2Context : DbContext
{
    public STUDIO_JESSICA_OLIVEIRA2Context(DbContextOptions<STUDIO_JESSICA_OLIVEIRA2Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Aluno> Alunos { get; set; }

    public virtual DbSet<Aluno> Disciplinas { get; set; }

    public virtual DbSet<Endereço> Endereços { get; set; }

    public virtual DbSet<EndereçoAluno> EndereçoAlunos { get; set; }

    public virtual DbSet<EndereçoProfessor> EndereçoProfessors { get; set; }

    public virtual DbSet<Escola> Escolas { get; set; }

    public virtual DbSet<Financeiro> Financeiros { get; set; }

    public virtual DbSet<Horario> Horarios { get; set; }

    public virtual DbSet<Notas> Nota { get; set; }

    public virtual DbSet<PlanoDeAula> PlanoDeAulas { get; set; }

    public virtual DbSet<Professor> Professors { get; set; }

    public virtual DbSet<SalaDeAula> SalaDeAulas { get; set; }

    public virtual DbSet<TelefoneAluno> TelefoneAlunos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Aluno>(entity =>
        {
            entity.HasKey(e => e.Cpf);

            entity.ToTable("Aluno");

            entity.Property(e => e.Cpf)
                .HasMaxLength(11)
                .IsFixedLength()
                .HasColumnName("CPF");
            entity.Property(e => e.DataDeNascimento).HasColumnType("date");
            entity.Property(e => e.Disciplina).HasMaxLength(50);
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.Faltas)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Nota).HasMaxLength(50);
            entity.Property(e => e.Senha).HasMaxLength(50);
        });

        modelBuilder.Entity<Disciplina>(entity =>
        {
            entity.HasKey(e => e.Codigo);

            entity.ToTable("Disciplina");

            entity.Property(e => e.Codigo).ValueGeneratedNever();
            entity.Property(e => e.Nome).HasMaxLength(100);
        });

        modelBuilder.Entity<Endereço>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Endereço");

            entity.HasIndex(e => e.Cnpj, "IX_Endereço_CNPJ");

            entity.Property(e => e.Cidade).HasMaxLength(100);
            entity.Property(e => e.Cnpj)
                .HasMaxLength(14)
                .IsFixedLength()
                .HasColumnName("CNPJ");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.Logradouro).HasMaxLength(255);

            entity.HasOne(d => d.Cnpjs).WithMany()
                .HasForeignKey(d => d.Cnpj)
                .HasConstraintName("FK_Escola_Endereço");
        });

        modelBuilder.Entity<EndereçoAluno>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Endereço_Aluno");

            entity.HasIndex(e => e.Cpf, "IX_Endereço_Aluno_CPF");

            entity.Property(e => e.Cidade).HasMaxLength(100);
            entity.Property(e => e.Cpf)
                .HasMaxLength(11)
                .IsFixedLength()
                .HasColumnName("CPF");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.Logradouro).HasMaxLength(255);

            entity.HasOne(d => d.Cpfs).WithMany()
                .HasForeignKey(d => d.Cpf)
                .HasConstraintName("FK_Endereço_Aluno");
        });

        modelBuilder.Entity<EndereçoProfessor>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Endereço_Professor");

            entity.HasIndex(e => e.Cpf, "IX_Endereço_Professor_CPF");

            entity.Property(e => e.Cidade).HasMaxLength(100);
            entity.Property(e => e.Cpf)
                .HasMaxLength(11)
                .IsFixedLength()
                .HasColumnName("CPF");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .IsFixedLength();
            entity.Property(e => e.Logradouro).HasMaxLength(255);

            entity.HasOne(d => d.Cpfs).WithMany()
                .HasForeignKey(d => d.Cpf)
                .HasConstraintName("FK_Professor_Endereço");
        });

        modelBuilder.Entity<Escola>(entity =>
        {
            entity.HasKey(e => e.Cpnj);

            entity.ToTable("Escola");

            entity.Property(e => e.Cpnj)
                .HasMaxLength(14)
                .IsFixedLength()
                .HasColumnName("CPNJ");
            entity.Property(e => e.Endereço).HasMaxLength(55);
            entity.Property(e => e.Nome).HasMaxLength(50);
            entity.Property(e => e.Telefone).HasMaxLength(15);
        });

        modelBuilder.Entity<Financeiro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Financeiro");

            entity.HasIndex(e => e.Cpf, "IX_Financeiro_CPF");

            entity.Property(e => e.Cpf)
                .HasMaxLength(11)
                .IsFixedLength()
                .HasColumnName("CPF");
            entity.Property(e => e.DataBoleto).HasColumnType("date");
            entity.Property(e => e.SituacaoPagamento).HasMaxLength(50);
            entity.Property(e => e.ValorBoleto).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Cpfs).WithMany()
                .HasForeignKey(d => d.Cpf)
                .HasConstraintName("FK_Financeiro_Aluno");
        });

        modelBuilder.Entity<Horario>(entity =>
        {
            entity.HasKey(e => e.Codigo);

            entity.ToTable("Horario");

            entity.HasIndex(e => e.Cpfaluno, "IX_Horario_CPFAluno");

            entity.HasIndex(e => e.Cpfprofessor, "IX_Horario_CPFProfessor");

            entity.HasIndex(e => e.NumeroSala, "IX_Horario_NumeroSala");

            entity.Property(e => e.Codigo).ValueGeneratedNever();
            entity.Property(e => e.Cpfaluno)
                .HasMaxLength(11)
                .IsFixedLength()
                .HasColumnName("CPFAluno");
            entity.Property(e => e.Cpfprofessor)
                .HasMaxLength(11)
                .IsFixedLength()
                .HasColumnName("CPFProfessor");

            entity.HasOne(d => d.Disciplina)
                .WithMany(p => p.Horarios)
                .HasForeignKey(d => d.CodigoDisciplina)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Horario_Disciplina");

            entity.HasOne(d => d.CpfsAlunos)
                .WithMany(p => p.Horarios)
                .HasForeignKey(d => d.Cpfaluno)
                .HasConstraintName("FK_Horario_Aluno");

            entity.HasOne(d => d.Cpfsprofessor)
                .WithMany(p => p.Horarios)
                .HasForeignKey(d => d.Cpfprofessor)
                .HasConstraintName("FK_Horario_CPF_Professor");

            entity.HasOne(d => d.NumeroSalas)
                .WithMany(p => p.Horarios)
                .HasForeignKey(d => d.NumeroSala)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Horario_NumeroSala");
        });

        modelBuilder.Entity<Notas>(entity =>
        {
            entity.HasKey(e => e.Codigo);

            entity.HasIndex(e => e.Cpf, "IX_Nota_CPF");

            entity.Property(e => e.Codigo).ValueGeneratedNever();
            entity.Property(e => e.Cpf)
                .HasMaxLength(11)
                .IsFixedLength()
                .HasColumnName("CPF");
            entity.Property(e => e.Nota).HasMaxLength(50);

            entity.HasOne(d => d.CpfsAlunos).WithMany(p => p.Notas)
                .HasForeignKey(d => d.Cpf)
                .HasConstraintName("FK_Nota_Aluno");
        });

        modelBuilder.Entity<PlanoDeAula>(entity =>
        {
            entity.HasKey(e => e.Codigo);

            entity.ToTable("PlanoDeAula");

            entity.HasIndex(e => e.Cpfprofessor, "IX_PlanoDeAula_CPFprofessor");

            entity.HasIndex(e => e.NumeroSala, "IX_PlanoDeAula_NumeroSala");

            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Cpfprofessor)
                .HasMaxLength(11)
                .IsFixedLength()
                .HasColumnName("CPFprofessor");
            entity.Property(e => e.Musica).HasMaxLength(50);

            entity.HasOne(d => d.Cpfsprofessor).WithMany(p => p.PlanoDeAulas)
                .HasForeignKey(d => d.Cpfprofessor)
                .HasConstraintName("FK_PlanodeAula_Professor");

            entity.HasOne(d => d.NumeroSalas).WithMany(p => p.PlanoDeAulas)
                .HasForeignKey(d => d.NumeroSala)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PlanoDeAula_NumeroSala");
        });

        modelBuilder.Entity<Professor>(entity =>
        {
            entity.HasKey(e => e.Cpf);

            entity.ToTable("Professor");

            entity.Property(e => e.Cpf)
                .HasMaxLength(11)
                .IsFixedLength()
                .HasColumnName("CPF");
            entity.Property(e => e.Disciplina).HasMaxLength(100);
            entity.Property(e => e.Nome).HasMaxLength(100);
        });

        modelBuilder.Entity<SalaDeAula>(entity =>
        {
            entity.HasKey(e => e.NumeroSala).HasName("PK_SalaDeAula_1");

            entity.ToTable("SalaDeAula");

            entity.Property(e => e.NumeroSala).ValueGeneratedNever();
        });

        modelBuilder.Entity<TelefoneAluno>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Telefone_Aluno");

            entity.HasIndex(e => e.Cpf, "IX_Telefone_Aluno_CPF");

            entity.Property(e => e.Cpf)
                .HasMaxLength(11)
                .IsFixedLength()
                .HasColumnName("CPF");
            entity.Property(e => e.Numero).HasMaxLength(15);

            entity.HasOne(d => d.CpfsAlunos).WithMany()
                .HasForeignKey(d => d.Cpf)
                .HasConstraintName("FK_Telefone_Aluno");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}